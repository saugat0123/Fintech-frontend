Index: src/app/feature/customer/component/customer-loan-information/customer-loan-information.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/customer/component/customer-loan-information/customer-loan-information.component.ts b/src/app/feature/customer/component/customer-loan-information/customer-loan-information.component.ts
--- a/src/app/feature/customer/component/customer-loan-information/customer-loan-information.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/customer/component/customer-loan-information/customer-loan-information.component.ts	(date 1630473466150)
@@ -387,11 +387,13 @@
         this.creditRiskGrading.data = data;
         this.customerInfoService.saveLoanInfo(this.creditRiskGrading, this.customerInfoId, TemplateName.CRG)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Credit Risk Grading!'));
                 this.itemCrg.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Successfully saved Credit Risk Grading!'));
             });
     }
@@ -403,11 +405,13 @@
         this.crgGamma.data = data;
         this.customerInfoService.saveLoanInfo(this.crgGamma, this.customerInfoId, TemplateName.CRG_GAMMA)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Credit Risk Grading (Gamma)!'));
                 this.itemCrgGamma.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Successfully saved Credit Risk Grading (Gamma)!'));
             });
     }
@@ -455,11 +459,13 @@
         this.netTradingAssets = data;
         this.customerInfoService.saveLoanInfo(this.netTradingAssets, this.customerInfoId, TemplateName.NET_TRADING_ASSETS)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Net Trading Assets!'));
                 this.itemNetTradingAssets.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Successfully saved Net Trading Assets)!'));
             });
     }
@@ -489,11 +495,13 @@
         this.microLoanSynopsis = data;
         this.customerInfoService.saveLoanInfo(this.microLoanSynopsis, this.customerInfoId, TemplateName.SYNOPSIS_CREDITWORTHINESS)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Synopsis Creditworthiness!'));
                 this.synopsisAccordion.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Synopsis Creditworthiness!'));
             });
     }
@@ -505,11 +513,13 @@
         this.borrowerPortfolio = data;
         this.customerInfoService.saveLoanInfo(this.borrowerPortfolio, this.customerInfoId, TemplateName.BORROWER_PORTFOLIO)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Borrower Portfolio!'));
                 this.loanPortfolio.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save  Borrower Portfolio!'));
             });
     }
@@ -521,11 +531,13 @@
         this.microBorrowerFinancial = data;
         this.customerInfoService.saveLoanInfo(this.microBorrowerFinancial, this.customerInfoId, TemplateName.BASEL_RISK_EXPOSURE)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Basel Wise Risk Exposure!'));
                 this.baselRiskAccordion.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Basel Wise Risk Exposure!'));
             });
     }
@@ -537,11 +549,13 @@
         this.borrowerPortfolio = data;
         this.customerInfoService.saveLoanInfo(this.borrowerPortfolio, this.customerInfoId, TemplateName.MICRO_BORROWER_FINANCIAL)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Borrower Portfolio!'));
                 this.borrowerFinancialHighlight.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save  Borrower Portfolio!'));
             });
     }
@@ -553,11 +567,13 @@
         this.microCrgParams = data;
         this.customerInfoService.saveLoanInfo(this.microCrgParams, this.customerInfoId, TemplateName.MICRO_OTHER_PARAMETERS)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, 'Successfully saved Micro CRG Params!'));
                 this.microCrgParamsComponent.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Micro CRG Params!'));
             });
     }
@@ -569,11 +585,13 @@
         this.marketingActivities = data;
         this.customerInfoService.saveLoanInfo(this.marketingActivities, this.customerInfoId, TemplateName.MARKETING_ACTIVITIES)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Marketing Activities!'));
                 this.marketingActivitiesAccordian.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Marketing Activities!'));
             });
     }
@@ -603,11 +621,13 @@
         this.commentsDataResponse = data;
         this.customerInfoService.saveLoanInfo(this.commentsDataResponse, this.customerInfoId, TemplateName.COMMENTS)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, ' Successfully saved Comments!'));
                 this.commentsFromAccount.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Comments)!'));
             });
     }
@@ -619,11 +639,13 @@
         this.securityDataResponse = data;
         this.customerInfoService.saveLoanInfo(this.securityDataResponse, this.customerInfoId, TemplateName.PREVIOUS_SECURITY)
             .subscribe(() => {
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.SUCCESS, 'Successfully saved Previous Security'));
                 this.dataFromPreviousSecurity.close();
                 this.triggerCustomerRefresh.emit(true);
             }, error => {
                 console.error(error);
+                this.overlay.hide();
                 this.toastService.show(new Alert(AlertType.ERROR, 'Unable to save Previous Security'));
             });
     }
Index: src/app/feature/micro-loan/template/borrower-financial/borrower-financial.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/micro-loan/template/borrower-financial/borrower-financial.component.ts b/src/app/feature/micro-loan/template/borrower-financial/borrower-financial.component.ts
--- a/src/app/feature/micro-loan/template/borrower-financial/borrower-financial.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/micro-loan/template/borrower-financial/borrower-financial.component.ts	(date 1630474372377)
@@ -6,6 +6,7 @@
 import {ModalResponse} from '../../../../@core/utils';
 import {FinancialDeleteComponentComponent} from '../../../loan-information-template/financial/financial-delete-component/financial-delete-component.component';
 import {NgbModal} from '@ng-bootstrap/ng-bootstrap';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
   selector: 'app-borrower-financial',
@@ -23,7 +24,8 @@
   currentFormData;
 
   constructor(protected formBuilder: FormBuilder,
-              protected modalService: NgbModal) {
+              protected modalService: NgbModal,
+              private overlay: NgxSpinnerService) {
   }
 
   ngOnInit() {
@@ -101,6 +103,7 @@
   }
 
   onSubmit() {
+    this.overlay.show();
     const currentFormData = {
       fiscalYear: this.fiscalYear,
       auditorList: this.auditorList,
Index: src/app/feature/loan-information-template/nta-mega/nta-mega.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/loan-information-template/nta-mega/nta-mega.component.ts b/src/app/feature/loan-information-template/nta-mega/nta-mega.component.ts
--- a/src/app/feature/loan-information-template/nta-mega/nta-mega.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/loan-information-template/nta-mega/nta-mega.component.ts	(date 1630473168265)
@@ -10,6 +10,7 @@
 import {environment} from '../../../../environments/environment';
 import {Clients} from '../../../../environments/Clients';
 import {Editor} from '../../../@core/utils/constants/editor';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
   selector: 'app-nta-mega',
@@ -47,7 +48,8 @@
 
   constructor(protected formBuilder: FormBuilder,
               protected fiscalYearService: FiscalYearService,
-              protected toastService: ToastService) {
+              protected toastService: ToastService,
+              private overlay: NgxSpinnerService) {
   }
 
   ngOnInit() {
@@ -268,6 +270,7 @@
   }
 
   onSubmit() {
+    this.overlay.show();
     if (!ObjectUtil.isEmpty(this.netTradingAssetsData)) {
       this.netTradingAssetSubmitData = this.netTradingAssetsData;
     }
Index: src/app/feature/loan-information-template/net-trading-assets/net-trading-assets.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/loan-information-template/net-trading-assets/net-trading-assets.component.ts b/src/app/feature/loan-information-template/net-trading-assets/net-trading-assets.component.ts
--- a/src/app/feature/loan-information-template/net-trading-assets/net-trading-assets.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/loan-information-template/net-trading-assets/net-trading-assets.component.ts	(date 1630473245519)
@@ -8,6 +8,7 @@
 import {Alert, AlertType} from '../../../@theme/model/Alert';
 import {CalendarType} from '../../../@core/model/calendar-type';
 import {Editor} from '../../../@core/utils/constants/editor';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
     selector: 'app-net-trading-assets',
@@ -41,7 +42,8 @@
 
     constructor(protected formBuilder: FormBuilder,
                 protected fiscalYearService: FiscalYearService,
-                protected toastService: ToastService) {
+                protected toastService: ToastService,
+                private overlay: NgxSpinnerService) {
     }
 
     ngOnInit() {
@@ -280,6 +282,7 @@
     }
 
     onSubmit() {
+        this.overlay.show();
         if (!ObjectUtil.isEmpty(this.netTradingAssetsData)) {
             this.netTradingAssetSubmitData = this.netTradingAssetsData;
         }
Index: src/app/feature/loan-information-template/cicl/cicl.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/loan-information-template/cicl/cicl.component.ts b/src/app/feature/loan-information-template/cicl/cicl.component.ts
--- a/src/app/feature/loan-information-template/cicl/cicl.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/loan-information-template/cicl/cicl.component.ts	(date 1630474957664)
@@ -179,7 +179,6 @@
       const controls = this.ciclForm.controls.ciclArray as FormArray;
       controls.clearAsyncValidators();
       controls.clear();
-      this.overlay.hide();
   }
     if (this.ciclHistory === true) {
         if (this.ciclForm.invalid) {
Index: src/app/feature/micro-loan/template/micro-crg-params/micro-crg-params.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/micro-loan/template/micro-crg-params/micro-crg-params.component.ts b/src/app/feature/micro-loan/template/micro-crg-params/micro-crg-params.component.ts
--- a/src/app/feature/micro-loan/template/micro-crg-params/micro-crg-params.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/micro-loan/template/micro-crg-params/micro-crg-params.component.ts	(date 1630477221516)
@@ -18,6 +18,7 @@
 import {MultipleSourceIncomeType} from './model/MajorSourceIncomeType';
 import {RelationWithBank} from './model/RelationWithBank';
 import {TypeOfSourceOfIncome, TypeOfSourceOfIncomeArray, TypeOfSourceOfIncomeMap} from './model/TypeOfSourceOfIncome';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
   selector: 'app-micro-crg-params',
@@ -52,7 +53,8 @@
   client = environment.client;
   clientName = Clients;
 
-  constructor(private formBuilder: FormBuilder) {
+  constructor(private formBuilder: FormBuilder,
+              private overlay: NgxSpinnerService) {
   }
 
   get form() {
@@ -347,11 +349,13 @@
   }
 
   onSubmit() {
+    this.overlay.show();
     this.submitted = true;
     if (!ObjectUtil.isEmpty(this.microCrgParams)) {
       this.microCrgParamsData = this.microCrgParams;
     }
     if (this.microCrgParamsForm.invalid) {
+      this.overlay.hide();
       return;
     }
     this.calculateAndSetHighestScore();
Index: src/app/feature/micro-loan/template/borrower-loan-portofolio/borrower-loan-portofolio.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/micro-loan/template/borrower-loan-portofolio/borrower-loan-portofolio.component.ts b/src/app/feature/micro-loan/template/borrower-loan-portofolio/borrower-loan-portofolio.component.ts
--- a/src/app/feature/micro-loan/template/borrower-loan-portofolio/borrower-loan-portofolio.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/micro-loan/template/borrower-loan-portofolio/borrower-loan-portofolio.component.ts	(date 1630473778565)
@@ -5,6 +5,7 @@
 import {ToastService} from '../../../../@core/utils';
 import {BorrowerPortfolio} from '../../../loan/model/borrwerportfolio';
 import {ObjectUtil} from '../../../../@core/utils/ObjectUtil';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
     selector: 'app-borrower-loan-portofolio',
@@ -23,7 +24,8 @@
 
     constructor(private formBuilder: FormBuilder,
                 private elementRef: ElementRef,
-                private toastService: ToastService) {
+                private toastService: ToastService,
+                private overlay: NgxSpinnerService) {
     }
 
     get form() {
@@ -117,6 +119,7 @@
     }
 
     submitForm() {
+        this.overlay.show();
         this.submitted = true;
         if (this.portfolioForm.invalid) {
             this.toastService.show(new Alert(AlertType.ERROR, 'All fields are mandatory!'));
Index: src/app/feature/micro-loan/template/marketing-activities/marketing-activities.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/micro-loan/template/marketing-activities/marketing-activities.component.ts b/src/app/feature/micro-loan/template/marketing-activities/marketing-activities.component.ts
--- a/src/app/feature/micro-loan/template/marketing-activities/marketing-activities.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/micro-loan/template/marketing-activities/marketing-activities.component.ts	(date 1630474147850)
@@ -6,6 +6,7 @@
 import {ToastService} from '../../../../@core/utils';
 import {MarketingActivities} from '../../../loan/model/marketing-activities';
 import {ObjectUtil} from '../../../../@core/utils/ObjectUtil';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
   selector: 'app-marketing-activities',
@@ -26,7 +27,8 @@
 
   constructor(private formBuilder: FormBuilder,
               protected fiscalYearService: FiscalYearService,
-              private toastService: ToastService) {
+              private toastService: ToastService,
+              private overlay: NgxSpinnerService) {
   }
 
   ngOnInit() {
@@ -118,6 +120,7 @@
   }
 
   submitForm() {
+    this.overlay.show();
     this.submitted = true;
     if (this.marketingActivityForm.invalid) {
       this.toastService.show(new Alert(AlertType.ERROR, 'All fields are mandatory!'));
Index: src/app/feature/loan-information-template/crg-micro/crg-micro.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/loan-information-template/crg-micro/crg-micro.component.ts b/src/app/feature/loan-information-template/crg-micro/crg-micro.component.ts
--- a/src/app/feature/loan-information-template/crg-micro/crg-micro.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/loan-information-template/crg-micro/crg-micro.component.ts	(date 1630473514761)
@@ -15,6 +15,7 @@
 import {MultibankingMap} from '../../micro-loan/template/micro-crg-params/model/Multibanking';
 import {RelationWithBankMap} from '../../micro-loan/template/micro-crg-params/model/RelationWithBank';
 import {RepaymentHistoryMap} from '../../micro-loan/template/micro-crg-params/model/RepaymentHistory';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
   selector: 'app-crg-micro',
@@ -72,7 +73,8 @@
   isSubsidiary = false;
   noDataForMicroParam = false;
 
-  constructor(protected formBuilder: FormBuilder) { }
+  constructor(protected formBuilder: FormBuilder,
+              private overlay: NgxSpinnerService) { }
 
   ngOnInit() {
     this.buildForm();
@@ -326,6 +328,7 @@
   }
 
   onSubmit() {
+    this.overlay.show();
     if (!ObjectUtil.isEmpty(this.formData)) {
       this.creditRiskData = this.formData;
     }
Index: src/app/feature/micro-loan/template/basel-risk-exposure/basel-risk-exposure.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/micro-loan/template/basel-risk-exposure/basel-risk-exposure.component.ts b/src/app/feature/micro-loan/template/basel-risk-exposure/basel-risk-exposure.component.ts
--- a/src/app/feature/micro-loan/template/basel-risk-exposure/basel-risk-exposure.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/micro-loan/template/basel-risk-exposure/basel-risk-exposure.component.ts	(date 1630474246576)
@@ -4,6 +4,7 @@
 import {ToastService} from '../../../../@core/utils';
 import {ObjectUtil} from '../../../../@core/utils/ObjectUtil';
 import {Alert, AlertType} from '../../../../@theme/model/Alert';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
   selector: 'app-basel-risk-exposure',
@@ -20,7 +21,8 @@
 
   constructor(private formBuilder: FormBuilder,
               private elementRef: ElementRef,
-              private toastService: ToastService) {
+              private toastService: ToastService,
+              private overlay: NgxSpinnerService) {
   }
 
   get formControls() {
@@ -105,9 +107,11 @@
   }
 
   public submitForm() {
+    this.overlay.show();
     this.submitted = true;
     if (this.baselRiskExposureForm.invalid) {
       this.scrollToInvalidControl();
+      this.overlay.hide();
       this.toastService.show(new Alert(AlertType.ERROR, 'Please fill all fields!'));
       return;
     }
Index: src/app/feature/micro-loan/form-component/micro-synopsis/micro-synopsis.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/feature/micro-loan/form-component/micro-synopsis/micro-synopsis.component.ts b/src/app/feature/micro-loan/form-component/micro-synopsis/micro-synopsis.component.ts
--- a/src/app/feature/micro-loan/form-component/micro-synopsis/micro-synopsis.component.ts	(revision 1d81ae089ef19fe1d7fb19f47768c010a3c299d7)
+++ b/src/app/feature/micro-loan/form-component/micro-synopsis/micro-synopsis.component.ts	(date 1630476906632)
@@ -4,6 +4,7 @@
 import {ObjectUtil} from '../../../../@core/utils/ObjectUtil';
 import {ToastService} from '../../../../@core/utils';
 import {Alert, AlertType} from '../../../../@theme/model/Alert';
+import {NgxSpinnerService} from "ngx-spinner";
 
 @Component({
   selector: 'app-micro-synopsis',
@@ -23,7 +24,8 @@
 
   constructor(private formBuilder: FormBuilder,
               private elementRef: ElementRef,
-              private toastService: ToastService,) {
+              private toastService: ToastService,
+              private overlay: NgxSpinnerService) {
   }
 
   get formControls() {
@@ -85,8 +87,10 @@
   }
 
   public submitForm() {
+    this.overlay.show();
     this.submitted = true;
     if (this.synopsisFormGroup.invalid) {
+      this.overlay.hide();
       this.scrollToInvalidControl();
       this.toastService.show(new Alert(AlertType.ERROR, 'All fields are mandatory!'));
       return;
